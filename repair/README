Atomspace deduplication repair scripts
--------------------------------------

Due to bugs, the SQL backend can end up with multiple copies of
atoms. This script will find them, merge them, and sum the counts
on the associated count truth values.  Its up to you to recompute
anything else.

The scripts are semi-manual. A lot of manual fiddling is required.

First check for multiple ANY atoms:
  select * from typecodes where typename='LinkGrammarRelationshipNode';

reports that type=89 is LinkGrammarRelationshipNode)
Then see how many:
   select * from atoms where type=89 and name='ANY';

If more than one, start with ./any-merge.scm


First, edit common.scm and set do-update to #f -- 
  -- this will avoid clobbering your data.
  -- tehn run ./dedupe-pairs.scm and see what happens..

Next, edit common.scm and set do-update to #t --
  -- this is the actual run.

Then review contents of and run word-merge.scm
then delete the duplicate WordNodes by hand.

Then run dedupe-pairs.scm a second time ...

Finally, fix the indexes, manually:
\di
DROP INDEX linkidx;
CREATE UNIQUE INDEX linkidx ON Atoms(type, outgoing);
DROP INDEX nodeidx;
CREATE UNIQUE INDEX nodeidx ON Atoms(type, name);

ALTER TABLE atoms ADD UNIQUE (type, outgoing);
ALTER TABLE atoms ADD UNIQUE (type, name);


and then remove duplicates again with ./eval-dedup.scm

After scrubbing, we may end up with Links that specify children that
are not in the atomspace. Check for these with ./check-oset.scm

Notes
-----
Working on Rohits dataset.
psql simple_pairs
SELECT Count(*) from atoms; gives 9 230 537 -- that is 9 million or so

Find the ANY node:
61 | LinkGrammarRelationshipNode
select * from atoms where type=61;

arghhh. There are 6 of these...

  27 | EvaluationLink

